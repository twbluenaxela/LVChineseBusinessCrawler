{"version":3,"sources":["Components/pachong.jsx","App.js","index.js"],"names":["axios","require","DynamicTable","jsonData","column","Object","keys","className","map","data","v","replace","InstructionsPage","CategorySelector","categories","setUrlToPost","setTrigger","id","onChange","event","currentSelectedOption","target","value","console","log","Date","item","CATEGORY_PAGE_LINK","name","CATEGORY_CHINESE_NAME","CATEGORY_ENGLISH_NAME","Pachong","React","useState","urlToPost","scrapedObjects","setScrapedObjects","apiTrigger","instructionsTrigger","setInstructionsTrigger","setCategories","useEffect","categoriesPageUrl","post","url","then","response","fetchCategories","CategoriesSkeletonLoader","class","onClick","preventDefault","tableData","document","querySelector","innerText","navigator","clipboard","writeText","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb7bf1f6.chunk.js","sourcesContent":["// import {COMPANY_CHINESE_FIELD_NAME, COMPANY_ENGLISH_FIELD_NAME, ADDRESS_FIELD_NAME, PHONE_NUMBER_FIELD_NAME} from '../constants'\r\nimport React from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\n/* \r\nNOTE: you need to go here and request access by clicking the button.\r\nYou can't try to fetch info from here directly because it\r\nwill send a CORS issue which is super annoying. So the fix\r\nis to use a proxy server like the one below\r\n*/\r\n//it seems I don't need to use the proxy now that I have cors setup in my express js.\r\n//I will leave it here for reference...\r\n// const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n// const proxyLocalhostURL = \"https://8080-twbluenaxel-lvchinesebu-dk524wi8o8z.ws-us47.gitpod.io/\"\r\n\r\n//https://medium.com/@stefanhyltoft/scraping-html-tables-with-nodejs-request-and-cheerio-e3c6334f661b\r\n\r\n// let lvcnnCategories = document.querySelectorAll(\"td > a[href^='list_group.php?id']\")\r\n\r\nfunction Pachong() {\r\n  const [urlToPost, setUrlToPost] = React.useState(\"\");\r\n  const [scrapedObjects, setScrapedObjects] = React.useState({});\r\n  const [apiTrigger, setTrigger] = React.useState(0);\r\n  const [instructionsTrigger, setInstructionsTrigger] = React.useState(false);\r\n  const [categories, setCategories] = React.useState(null);\r\n\r\n  let dummyObj = [\r\n    {\r\n      \"中文店名 Chinese\": \"聯合律師事務所\",\r\n      \"English Name\": \"Parke Law Firm\",\r\n      \"地址 Address\": \"4455 S. Jones Blvd., #1 Las Vegas, NV 89103\",\r\n      \"電話號碼 Phone Number\": \"702-321-1187\",\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (urlToPost) {\r\n      getScrapedObjects(urlToPost);\r\n    }\r\n  }, [apiTrigger]);\r\n\r\n  function fetchCategories() {\r\n    const categoriesPageUrl = \"https://www.lvcnn.com/list.php\";\r\n    axios.post(\"/api/category\", { url: categoriesPageUrl }).then((response) => {\r\n      // console.log(response.data)\r\n      setCategories(response.data);\r\n    });\r\n  }\r\n\r\n  function getScrapedObjects(url) {\r\n    axios\r\n      .post(\"/api/scrape\", { url: url })\r\n      .then((response) => setScrapedObjects(response.data));\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const submittedUrl = event.currentTarget.elements.urlInput.value;\r\n    setUrlToPost(submittedUrl);\r\n    setTrigger(+new Date());\r\n  }\r\n\r\n  function handleClickInstructions(event) {\r\n    event.preventDefault();\r\n    setInstructionsTrigger((instructionsTrigger) => !instructionsTrigger);\r\n  }\r\n\r\n  function handleCopyButton(event) {\r\n    event.preventDefault();\r\n    let tableData = document.querySelector(\"tbody\").innerText;\r\n    console.log(tableData);\r\n    navigator.clipboard.writeText(tableData);\r\n  }\r\n\r\n  const CategoriesSkeletonLoader = () => {\r\n    return (\r\n      <div class=\"w-60 h-24 border-2 rounded-md mx-1 mt-2\">\r\n        <div class=\"flex animate-pulse flex-row items-center h-full justify-center space-x-5\">\r\n          <div class=\"w-12 bg-gray-300 h-12 rounded-full \"></div>\r\n          <div class=\"flex flex-col space-y-3\">\r\n            <div class=\"w-36 bg-gray-300 h-6 rounded-md \"></div>\r\n            <div class=\"w-24 bg-gray-300 h-6 rounded-md \"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"pachong\">\r\n      <header className=\"App-header\">\r\n        <nav className=\"flex justify-start p-3 bg-sky-200 rounded-md mb-3 shadow-lg \">\r\n          <h1 className=\"self-auto text-3xl font-bold hover:underline \">\r\n            拉斯維加斯商業地區爬蟲🐛\r\n          </h1>\r\n          <button\r\n            className=\"transition ease-in-out delay-150 bg-blue-500 rounded-full shadow-lg shadow-blue-500/50 hover:-translate-y-1 hover:scale-110 hover:bg-indigo-500 shadow-indigo-500/50 duration-300\"\r\n            onClick={handleClickInstructions}\r\n          >\r\n            🙍🏻‍♀️❓\r\n          </button>\r\n        </nav>\r\n        {instructionsTrigger && <InstructionsPage />}\r\n        {categories ?\r\n          <CategorySelector\r\n            categories={categories}\r\n            setUrlToPost={setUrlToPost}\r\n            setTrigger={setTrigger}\r\n          />\r\n        : <CategoriesSkeletonLoader />}\r\n        {/*\r\n        I've decided this is actually pretty misleading as a feature since I think people want to search for things. \r\n        So I've decided to comment it away for now. Maybe it'll be useful in the future. \r\n\r\n        <form onSubmit={handleSubmit} className=\"mb-4\" >\r\n          <label><a href=\"https://www.lvcnn.com/list.php\" target=\"_blank\" className='font-extrabold underline' >LVCNN</a> Crawler:\r\n            <br />\r\n            <input className='outline outline-offset-2 outline-sky-200 rounded-sm shadow-inner ' type=\"url\" id=\"urlInput\" name=\"urlInput\" placeholder='Enter url here...' />\r\n          </label>\r\n          <button className='ring ring-offset-2 ring-blue-500 bg-slate-400 rounded-sm ml-2 ' type=\"submit\">Submit</button>\r\n        </form>\r\n        \r\n        */}\r\n      </header>\r\n      <button\r\n        className=\"outline outline-offset-2 outline-green-400 rounded-md m-3 bg-green-100\"\r\n        onClick={handleCopyButton}\r\n      >\r\n        Copy data 複製到剪貼板📋\r\n      </button>\r\n      <DynamicTable jsonData={!scrapedObjects[0] ? dummyObj : scrapedObjects} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DynamicTable({ jsonData }) {\r\n  //get table columns\r\n  const column = Object.keys(jsonData[0]);\r\n\r\n  //table heading\r\n  const ThData = () => {\r\n    return column.map((data) => {\r\n      return (\r\n        <th className=\"border border-green-400 bg-green-300 \" key={data}>\r\n          {data}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n\r\n  //table row\r\n  const tdData = () => {\r\n    return jsonData.map((data) => {\r\n      return (\r\n        <tr>\r\n          {column.map((v) => {\r\n            return (\r\n              <td className=\"border border-green-200 bg-green-100 m-3\">\r\n                {data[v].replace(/[&]amp[;]/gi, \"&\")}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <table className=\"border-separate border-spacing-x-2\">\r\n      <thead>\r\n        <tr>{ThData()}</tr>\r\n      </thead>\r\n      <tbody className=\"tabledata\">{tdData()}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction InstructionsPage() {\r\n  return (\r\n    <div className=\"bg-amber-100 p-3 mt-3 mb-3 shadow-md transition-all duration-200\">\r\n      <h2 className=\"text-xl font-bold\">使用説明 Instructions</h2>\r\n      {/*\r\n            <ul className=\"list-disc list-inside\">\r\n        <li className='font-medium'>先訪問這個網站 First visit this website\r\n          <a href=\"https://www.lvcnn.com/list.php\" target=\"_blank\" className='font-extrabold underline decoration-amber-300' > LVCNN</a>\r\n        </li>\r\n        <li className='font-medium'>然後點擊一個類型(如:廣告設計)Then choose a category (ex: Advertising)</li>\r\n        <li className='font-medium'>然後把上面的網址複製一下，之後可以粘貼到下面的輸入框框裏面</li>\r\n        <li className='font-medium'>Then copy the url at the top, and put it in the input box below</li>\r\n        <li className='font-medium'></li>\r\n      </ul>\r\n      \r\n      */}\r\n\r\n      <h2 className=\"text-lg font-bold\">選擇類型</h2>\r\n      <ul className=\"list-disc list-inside\">\r\n        <li className=\"font-medium\">選擇您想要查詢的類型。</li>\r\n        <li className=\"font-medium\">選擇之後，下面會馬上給你打出一個表格。</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CategorySelector({ categories, setUrlToPost, setTrigger }) {\r\n  // console.log(\"I am alive!\")\r\n  const CategoryOptions = () => {\r\n    return categories.map((item) => {\r\n      /*\r\n      So ideally I could format the english name in the backend when its being fetched and thrown into an array\r\n      For some reason that works with the chinese name and removing of <br>\r\n      However when this is thrown back into the front end, it gets automatically converted to html again and that's\r\n      what I'm sifting through. &amp; will be there by default no matter what I do. Unless of course, I handle it back\r\n      here, when it's not html, but just a string in an object.\r\n      */\r\n      return (\r\n        <option\r\n          value={item.CATEGORY_PAGE_LINK}\r\n          name={item.CATEGORY_CHINESE_NAME}\r\n          id={item.CATEGORY_CHINESE_NAME}\r\n        >\r\n          {item.CATEGORY_CHINESE_NAME +\r\n            \" \" +\r\n            item.CATEGORY_ENGLISH_NAME.replace(/[&]amp[;]/gi, \"&\")}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  // const handleFormSubmit = (event) => {\r\n  //   const urlToSubmit = event.target.value\r\n  //   console.log(urlToSubmit)\r\n  // }\r\n\r\n  const handleChange = (event) => {\r\n    const currentSelectedOption = event.target.value;\r\n    console.log(\"This is what you selected: \");\r\n    console.log(currentSelectedOption);\r\n    setUrlToPost(\"https://www.lvcnn.com/\" + currentSelectedOption);\r\n    setTrigger(+new Date());\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full md:w-auto ml-3 mb-1\">\r\n      <h1 className=\"text-xl font-bold mb-1\">請選擇要搜尋的類型</h1>\r\n      <select\r\n        id=\"chooseCategory\"\r\n        onChange={handleChange}\r\n        className=\"outline outline-4 outline-offset-2 outline-blue-300\"\r\n      >\r\n        {CategoryOptions()}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pachong;\r\n","import Pachong from './Components/pachong'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Pachong />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./dist/output.css\"\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}